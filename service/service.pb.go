// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: service.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SttResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SttResp) Reset() {
	*x = SttResp{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SttResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SttResp) ProtoMessage() {}

func (x *SttResp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SttResp.ProtoReflect.Descriptor instead.
func (*SttResp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *SttResp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type BasicSttInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicSttInput) Reset() {
	*x = BasicSttInput{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicSttInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicSttInput) ProtoMessage() {}

func (x *BasicSttInput) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicSttInput.ProtoReflect.Descriptor instead.
func (*BasicSttInput) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *BasicSttInput) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SttInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specify that your method accepts a training.ModelID in order to support training
	ModelId       *ModelID `protobuf:"bytes,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Speech        []byte   `protobuf:"bytes,2,opt,name=speech,proto3" json:"speech,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SttInput) Reset() {
	*x = SttInput{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SttInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SttInput) ProtoMessage() {}

func (x *SttInput) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SttInput.ProtoReflect.Descriptor instead.
func (*SttInput) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *SttInput) GetModelId() *ModelID {
	if x != nil {
		return x.ModelId
	}
	return nil
}

func (x *SttInput) GetSpeech() []byte {
	if x != nil {
		return x.Speech
	}
	return nil
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\aservice\x1a\x0etraining.proto\"!\n" +
	"\asttResp\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"#\n" +
	"\rbasicSttInput\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"P\n" +
	"\bsttInput\x12,\n" +
	"\bmodel_id\x18\x01 \x01(\v2\x11.training.ModelIDR\amodelId\x12\x16\n" +
	"\x06speech\x18\x02 \x01(\fR\x06speech2\xd3\x01\n" +
	"\x0eExampleService\x12\x87\x01\n" +
	"\x03stt\x12\x11.service.sttInput\x1a\x10.service.sttResp\"[\x8a\xb5\x18\adefault\x90\xb5\x18\x05\x98\xb5\x18d\xa0\xb5\x18d\xa8\xb5\x18\n" +
	"\xb2\xb5\x18\x12png, mp4, txt, mp3\xba\xb5\x18\vzip, tar.gzÂµ\x18\x17Additional requirements\x127\n" +
	"\tbasic_stt\x12\x16.service.basicSttInput\x1a\x10.service.sttResp\"\x00B\fZ\n" +
	"../serviceb\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_service_proto_goTypes = []any{
	(*SttResp)(nil),       // 0: service.sttResp
	(*BasicSttInput)(nil), // 1: service.basicSttInput
	(*SttInput)(nil),      // 2: service.sttInput
	(*ModelID)(nil),       // 3: training.ModelID
}
var file_service_proto_depIdxs = []int32{
	3, // 0: service.sttInput.model_id:type_name -> training.ModelID
	2, // 1: service.ExampleService.stt:input_type -> service.sttInput
	1, // 2: service.ExampleService.basic_stt:input_type -> service.basicSttInput
	0, // 3: service.ExampleService.stt:output_type -> service.sttResp
	0, // 4: service.ExampleService.basic_stt:output_type -> service.sttResp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_training_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
