// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: training_daemon.proto

package training

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthorizationDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentBlock uint64 `protobuf:"varint,1,opt,name=current_block,json=currentBlock,proto3" json:"current_block,omitempty"` // Check for relevance within a range of +/- N blocks
	// Signer can specify any message here
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Signature of the following message:
	// ("user specified message", user_address, current_block_number)
	Signature     []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	SignerAddress string `protobuf:"bytes,4,opt,name=signer_address,json=signerAddress,proto3" json:"signer_address,omitempty"`
}

func (x *AuthorizationDetails) Reset() {
	*x = AuthorizationDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationDetails) ProtoMessage() {}

func (x *AuthorizationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationDetails.ProtoReflect.Descriptor instead.
func (*AuthorizationDetails) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizationDetails) GetCurrentBlock() uint64 {
	if x != nil {
		return x.CurrentBlock
	}
	return 0
}

func (x *AuthorizationDetails) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthorizationDetails) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AuthorizationDetails) GetSignerAddress() string {
	if x != nil {
		return x.SignerAddress
	}
	return ""
}

type NewModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *AuthorizationDetails `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	Model         *NewModel             `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *NewModelRequest) Reset() {
	*x = NewModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewModelRequest) ProtoMessage() {}

func (x *NewModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewModelRequest.ProtoReflect.Descriptor instead.
func (*NewModelRequest) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{1}
}

func (x *NewModelRequest) GetAuthorization() *AuthorizationDetails {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *NewModelRequest) GetModel() *NewModel {
	if x != nil {
		return x.Model
	}
	return nil
}

type AuthValidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization    *AuthorizationDetails `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	ModelId          string                `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	TrainingDataLink string                `protobuf:"bytes,3,opt,name=training_data_link,json=trainingDataLink,proto3" json:"training_data_link,omitempty"`
}

func (x *AuthValidateRequest) Reset() {
	*x = AuthValidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthValidateRequest) ProtoMessage() {}

func (x *AuthValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthValidateRequest.ProtoReflect.Descriptor instead.
func (*AuthValidateRequest) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{2}
}

func (x *AuthValidateRequest) GetAuthorization() *AuthorizationDetails {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *AuthValidateRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *AuthValidateRequest) GetTrainingDataLink() string {
	if x != nil {
		return x.TrainingDataLink
	}
	return ""
}

type UploadAndValidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *AuthorizationDetails `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	UploadInput   *UploadInput          `protobuf:"bytes,2,opt,name=upload_input,json=uploadInput,proto3" json:"upload_input,omitempty"`
}

func (x *UploadAndValidateRequest) Reset() {
	*x = UploadAndValidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAndValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAndValidateRequest) ProtoMessage() {}

func (x *UploadAndValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAndValidateRequest.ProtoReflect.Descriptor instead.
func (*UploadAndValidateRequest) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{3}
}

func (x *UploadAndValidateRequest) GetAuthorization() *AuthorizationDetails {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *UploadAndValidateRequest) GetUploadInput() *UploadInput {
	if x != nil {
		return x.UploadInput
	}
	return nil
}

type CommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *AuthorizationDetails `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	ModelId       string                `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
}

func (x *CommonRequest) Reset() {
	*x = CommonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRequest) ProtoMessage() {}

func (x *CommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRequest.ProtoReflect.Descriptor instead.
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{4}
}

func (x *CommonRequest) GetAuthorization() *AuthorizationDetails {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *CommonRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

type UpdateModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *AuthorizationDetails `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	ModelId       string                `protobuf:"bytes,2,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	ModelName     *string               `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3,oneof" json:"model_name,omitempty"`
	Description   *string               `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	AddressList   []string              `protobuf:"bytes,5,rep,name=address_list,json=addressList,proto3" json:"address_list,omitempty"`
}

func (x *UpdateModelRequest) Reset() {
	*x = UpdateModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModelRequest) ProtoMessage() {}

func (x *UpdateModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModelRequest.ProtoReflect.Descriptor instead.
func (*UpdateModelRequest) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateModelRequest) GetAuthorization() *AuthorizationDetails {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *UpdateModelRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *UpdateModelRequest) GetModelName() string {
	if x != nil && x.ModelName != nil {
		return *x.ModelName
	}
	return ""
}

func (x *UpdateModelRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateModelRequest) GetAddressList() []string {
	if x != nil {
		return x.AddressList
	}
	return nil
}

type ModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfModels []*ModelResponse `protobuf:"bytes,1,rep,name=list_of_models,json=listOfModels,proto3" json:"list_of_models,omitempty"`
}

func (x *ModelsResponse) Reset() {
	*x = ModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelsResponse) ProtoMessage() {}

func (x *ModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelsResponse.ProtoReflect.Descriptor instead.
func (*ModelsResponse) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{6}
}

func (x *ModelsResponse) GetListOfModels() []*ModelResponse {
	if x != nil {
		return x.ListOfModels
	}
	return nil
}

type MethodMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId string `protobuf:"bytes,1,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// Model ID or gRPC method name
	GrpcMethodName  string `protobuf:"bytes,2,opt,name=grpc_method_name,json=grpcMethodName,proto3" json:"grpc_method_name,omitempty"`
	GrpcServiceName string `protobuf:"bytes,3,opt,name=grpc_service_name,json=grpcServiceName,proto3" json:"grpc_service_name,omitempty"`
}

func (x *MethodMetadataRequest) Reset() {
	*x = MethodMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodMetadataRequest) ProtoMessage() {}

func (x *MethodMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodMetadataRequest.ProtoReflect.Descriptor instead.
func (*MethodMetadataRequest) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{7}
}

func (x *MethodMetadataRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *MethodMetadataRequest) GetGrpcMethodName() string {
	if x != nil {
		return x.GrpcMethodName
	}
	return ""
}

func (x *MethodMetadataRequest) GetGrpcServiceName() string {
	if x != nil {
		return x.GrpcServiceName
	}
	return ""
}

type AllModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *AuthorizationDetails `protobuf:"bytes,1,opt,name=authorization,proto3" json:"authorization,omitempty"`
	// filters:
	Statuses         []Status `protobuf:"varint,3,rep,packed,name=statuses,proto3,enum=training.Status" json:"statuses,omitempty"` // optional
	IsPublic         *bool    `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3,oneof" json:"is_public,omitempty"`       // null - all, false - only private, true - only public models
	GrpcMethodName   string   `protobuf:"bytes,5,opt,name=grpc_method_name,json=grpcMethodName,proto3" json:"grpc_method_name,omitempty"`
	GrpcServiceName  string   `protobuf:"bytes,6,opt,name=grpc_service_name,json=grpcServiceName,proto3" json:"grpc_service_name,omitempty"`
	Name             string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	CreatedByAddress string   `protobuf:"bytes,8,opt,name=created_by_address,json=createdByAddress,proto3" json:"created_by_address,omitempty"`
	PageSize         uint64   `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page             uint64   `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *AllModelsRequest) Reset() {
	*x = AllModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllModelsRequest) ProtoMessage() {}

func (x *AllModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllModelsRequest.ProtoReflect.Descriptor instead.
func (*AllModelsRequest) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{8}
}

func (x *AllModelsRequest) GetAuthorization() *AuthorizationDetails {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *AllModelsRequest) GetStatuses() []Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *AllModelsRequest) GetIsPublic() bool {
	if x != nil && x.IsPublic != nil {
		return *x.IsPublic
	}
	return false
}

func (x *AllModelsRequest) GetGrpcMethodName() string {
	if x != nil {
		return x.GrpcMethodName
	}
	return ""
}

func (x *AllModelsRequest) GetGrpcServiceName() string {
	if x != nil {
		return x.GrpcServiceName
	}
	return ""
}

func (x *AllModelsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AllModelsRequest) GetCreatedByAddress() string {
	if x != nil {
		return x.CreatedByAddress
	}
	return ""
}

func (x *AllModelsRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AllModelsRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type TrainingMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingEnabled bool `protobuf:"varint,1,opt,name=trainingEnabled,proto3" json:"trainingEnabled,omitempty"`
	TrainingInProto bool `protobuf:"varint,2,opt,name=trainingInProto,proto3" json:"trainingInProto,omitempty"`
	// Key: grpc_service_name, Value: array of grpc_method_name
	TrainingMethods map[string]*structpb.ListValue `protobuf:"bytes,3,rep,name=trainingMethods,proto3" json:"trainingMethods,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TrainingMetadata) Reset() {
	*x = TrainingMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingMetadata) ProtoMessage() {}

func (x *TrainingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingMetadata.ProtoReflect.Descriptor instead.
func (*TrainingMetadata) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{9}
}

func (x *TrainingMetadata) GetTrainingEnabled() bool {
	if x != nil {
		return x.TrainingEnabled
	}
	return false
}

func (x *TrainingMetadata) GetTrainingInProto() bool {
	if x != nil {
		return x.TrainingInProto
	}
	return false
}

func (x *TrainingMetadata) GetTrainingMethods() map[string]*structpb.ListValue {
	if x != nil {
		return x.TrainingMethods
	}
	return nil
}

type MethodMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultModelId             string `protobuf:"bytes,50001,opt,name=default_model_id,json=defaultModelId,proto3" json:"default_model_id,omitempty"`
	MaxModelsPerUser           uint64 `protobuf:"varint,50002,opt,name=max_models_per_user,json=maxModelsPerUser,proto3" json:"max_models_per_user,omitempty"`                                   // max models per method & user
	DatasetMaxSizeMb           uint64 `protobuf:"varint,50003,opt,name=dataset_max_size_mb,json=datasetMaxSizeMb,proto3" json:"dataset_max_size_mb,omitempty"`                                   // max size of dataset
	DatasetMaxCountFiles       uint64 `protobuf:"varint,50004,opt,name=dataset_max_count_files,json=datasetMaxCountFiles,proto3" json:"dataset_max_count_files,omitempty"`                       // maximum number of files in the dataset
	DatasetMaxSizeSingleFileMb uint64 `protobuf:"varint,50005,opt,name=dataset_max_size_single_file_mb,json=datasetMaxSizeSingleFileMb,proto3" json:"dataset_max_size_single_file_mb,omitempty"` // maximum size of a single file in the dataset
	DatasetFilesType           string `protobuf:"bytes,50006,opt,name=dataset_files_type,json=datasetFilesType,proto3" json:"dataset_files_type,omitempty"`                                      // allowed files types in dataset. string with array or single value, example: jpg, png, mp3
	DatasetType                string `protobuf:"bytes,50007,opt,name=dataset_type,json=datasetType,proto3" json:"dataset_type,omitempty"`                                                       // string with array or single value, example: zip, tar.gz, tar
	DatasetDescription         string `protobuf:"bytes,50008,opt,name=dataset_description,json=datasetDescription,proto3" json:"dataset_description,omitempty"`                                  // additional free-form requirements
}

func (x *MethodMetadata) Reset() {
	*x = MethodMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_training_daemon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodMetadata) ProtoMessage() {}

func (x *MethodMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_training_daemon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodMetadata.ProtoReflect.Descriptor instead.
func (*MethodMetadata) Descriptor() ([]byte, []int) {
	return file_training_daemon_proto_rawDescGZIP(), []int{10}
}

func (x *MethodMetadata) GetDefaultModelId() string {
	if x != nil {
		return x.DefaultModelId
	}
	return ""
}

func (x *MethodMetadata) GetMaxModelsPerUser() uint64 {
	if x != nil {
		return x.MaxModelsPerUser
	}
	return 0
}

func (x *MethodMetadata) GetDatasetMaxSizeMb() uint64 {
	if x != nil {
		return x.DatasetMaxSizeMb
	}
	return 0
}

func (x *MethodMetadata) GetDatasetMaxCountFiles() uint64 {
	if x != nil {
		return x.DatasetMaxCountFiles
	}
	return 0
}

func (x *MethodMetadata) GetDatasetMaxSizeSingleFileMb() uint64 {
	if x != nil {
		return x.DatasetMaxSizeSingleFileMb
	}
	return 0
}

func (x *MethodMetadata) GetDatasetFilesType() string {
	if x != nil {
		return x.DatasetFilesType
	}
	return ""
}

func (x *MethodMetadata) GetDatasetType() string {
	if x != nil {
		return x.DatasetType
	}
	return ""
}

func (x *MethodMetadata) GetDatasetDescription() string {
	if x != nil {
		return x.DatasetDescription
	}
	return ""
}

var File_training_daemon_proto protoreflect.FileDescriptor

var file_training_daemon_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a,
	0x01, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0f,
	0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22,
	0xa4, 0x01, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0c, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0x70, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x82, 0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0d,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x0e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x6c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x15,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x72, 0x70, 0x63,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xff, 0x02, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x72, 0x70,
	0x63, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69,
	0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0xa1, 0x02, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x59, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x1a, 0x5e, 0x0a, 0x14,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x03, 0x0a,
	0x0e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x6d,
	0x61, 0x78, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0xd2, 0x86, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x5f, 0x6d, 0x62, 0x18, 0xd3, 0x86, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62, 0x12, 0x37, 0x0a,
	0x17, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0xd4, 0x86, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x1f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x62, 0x18, 0xd5, 0x86, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x1a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x7a,
	0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x62, 0x12, 0x2e, 0x0a,
	0x12, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0xd6, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xd7, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x31, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xd8, 0x86, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x93, 0x07, 0x0a, 0x06, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x12, 0x44, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x65, 0x77, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x14, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x42, 0x61, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x13, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x4b, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x42, 0x61, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x17, 0x2e, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x17, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x09, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x17, 0x2e, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x1c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x6e, 0x65,
	0x74, 0x2f, 0x73, 0x6e, 0x65, 0x74, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x35,
	0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_training_daemon_proto_rawDescOnce sync.Once
	file_training_daemon_proto_rawDescData = file_training_daemon_proto_rawDesc
)

func file_training_daemon_proto_rawDescGZIP() []byte {
	file_training_daemon_proto_rawDescOnce.Do(func() {
		file_training_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(file_training_daemon_proto_rawDescData)
	})
	return file_training_daemon_proto_rawDescData
}

var file_training_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_training_daemon_proto_goTypes = []any{
	(*AuthorizationDetails)(nil),     // 0: training.AuthorizationDetails
	(*NewModelRequest)(nil),          // 1: training.NewModelRequest
	(*AuthValidateRequest)(nil),      // 2: training.AuthValidateRequest
	(*UploadAndValidateRequest)(nil), // 3: training.UploadAndValidateRequest
	(*CommonRequest)(nil),            // 4: training.CommonRequest
	(*UpdateModelRequest)(nil),       // 5: training.UpdateModelRequest
	(*ModelsResponse)(nil),           // 6: training.ModelsResponse
	(*MethodMetadataRequest)(nil),    // 7: training.MethodMetadataRequest
	(*AllModelsRequest)(nil),         // 8: training.AllModelsRequest
	(*TrainingMetadata)(nil),         // 9: training.TrainingMetadata
	(*MethodMetadata)(nil),           // 10: training.MethodMetadata
	nil,                              // 11: training.TrainingMetadata.TrainingMethodsEntry
	(*NewModel)(nil),                 // 12: training.NewModel
	(*UploadInput)(nil),              // 13: training.UploadInput
	(*ModelResponse)(nil),            // 14: training.ModelResponse
	(Status)(0),                      // 15: training.Status
	(*structpb.ListValue)(nil),       // 16: google.protobuf.ListValue
	(*emptypb.Empty)(nil),            // 17: google.protobuf.Empty
	(*PriceInBaseUnit)(nil),          // 18: training.PriceInBaseUnit
	(*StatusResponse)(nil),           // 19: training.StatusResponse
}
var file_training_daemon_proto_depIdxs = []int32{
	0,  // 0: training.NewModelRequest.authorization:type_name -> training.AuthorizationDetails
	12, // 1: training.NewModelRequest.model:type_name -> training.NewModel
	0,  // 2: training.AuthValidateRequest.authorization:type_name -> training.AuthorizationDetails
	0,  // 3: training.UploadAndValidateRequest.authorization:type_name -> training.AuthorizationDetails
	13, // 4: training.UploadAndValidateRequest.upload_input:type_name -> training.UploadInput
	0,  // 5: training.CommonRequest.authorization:type_name -> training.AuthorizationDetails
	0,  // 6: training.UpdateModelRequest.authorization:type_name -> training.AuthorizationDetails
	14, // 7: training.ModelsResponse.list_of_models:type_name -> training.ModelResponse
	0,  // 8: training.AllModelsRequest.authorization:type_name -> training.AuthorizationDetails
	15, // 9: training.AllModelsRequest.statuses:type_name -> training.Status
	11, // 10: training.TrainingMetadata.trainingMethods:type_name -> training.TrainingMetadata.TrainingMethodsEntry
	16, // 11: training.TrainingMetadata.TrainingMethodsEntry.value:type_name -> google.protobuf.ListValue
	1,  // 12: training.Daemon.create_model:input_type -> training.NewModelRequest
	2,  // 13: training.Daemon.validate_model_price:input_type -> training.AuthValidateRequest
	3,  // 14: training.Daemon.upload_and_validate:input_type -> training.UploadAndValidateRequest
	2,  // 15: training.Daemon.validate_model:input_type -> training.AuthValidateRequest
	4,  // 16: training.Daemon.train_model_price:input_type -> training.CommonRequest
	4,  // 17: training.Daemon.train_model:input_type -> training.CommonRequest
	4,  // 18: training.Daemon.delete_model:input_type -> training.CommonRequest
	8,  // 19: training.Daemon.get_all_models:input_type -> training.AllModelsRequest
	4,  // 20: training.Daemon.get_model:input_type -> training.CommonRequest
	5,  // 21: training.Daemon.update_model:input_type -> training.UpdateModelRequest
	17, // 22: training.Daemon.get_training_metadata:input_type -> google.protobuf.Empty
	7,  // 23: training.Daemon.get_method_metadata:input_type -> training.MethodMetadataRequest
	14, // 24: training.Daemon.create_model:output_type -> training.ModelResponse
	18, // 25: training.Daemon.validate_model_price:output_type -> training.PriceInBaseUnit
	19, // 26: training.Daemon.upload_and_validate:output_type -> training.StatusResponse
	19, // 27: training.Daemon.validate_model:output_type -> training.StatusResponse
	18, // 28: training.Daemon.train_model_price:output_type -> training.PriceInBaseUnit
	19, // 29: training.Daemon.train_model:output_type -> training.StatusResponse
	19, // 30: training.Daemon.delete_model:output_type -> training.StatusResponse
	6,  // 31: training.Daemon.get_all_models:output_type -> training.ModelsResponse
	14, // 32: training.Daemon.get_model:output_type -> training.ModelResponse
	14, // 33: training.Daemon.update_model:output_type -> training.ModelResponse
	9,  // 34: training.Daemon.get_training_metadata:output_type -> training.TrainingMetadata
	10, // 35: training.Daemon.get_method_metadata:output_type -> training.MethodMetadata
	24, // [24:36] is the sub-list for method output_type
	12, // [12:24] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_training_daemon_proto_init() }
func file_training_daemon_proto_init() {
	if File_training_daemon_proto != nil {
		return
	}
	file_training_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_training_daemon_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AuthorizationDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NewModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AuthValidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UploadAndValidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CommonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*MethodMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AllModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TrainingMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_training_daemon_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MethodMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_training_daemon_proto_msgTypes[5].OneofWrappers = []any{}
	file_training_daemon_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_training_daemon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_training_daemon_proto_goTypes,
		DependencyIndexes: file_training_daemon_proto_depIdxs,
		MessageInfos:      file_training_daemon_proto_msgTypes,
	}.Build()
	File_training_daemon_proto = out.File
	file_training_daemon_proto_rawDesc = nil
	file_training_daemon_proto_goTypes = nil
	file_training_daemon_proto_depIdxs = nil
}
